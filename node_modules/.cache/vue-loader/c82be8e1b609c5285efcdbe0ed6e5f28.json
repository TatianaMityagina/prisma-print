{"remainingRequest":"C:\\Users\\Mityginy\\Documents\\project\\prisma-print\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Mityginy\\Documents\\project\\prisma-print\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Mityginy\\Documents\\project\\prisma-print\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mityginy\\Documents\\project\\prisma-print\\src\\components\\print-gallery.vue?vue&type=template&id=48946b52&scoped=true&","dependencies":[{"path":"C:\\Users\\Mityginy\\Documents\\project\\prisma-print\\src\\components\\print-gallery.vue","mtime":1588606691843},{"path":"C:\\Users\\Mityginy\\Documents\\project\\prisma-print\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mityginy\\Documents\\project\\prisma-print\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Mityginy\\Documents\\project\\prisma-print\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mityginy\\Documents\\project\\prisma-print\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}